FROM python:3.13-alpine AS builder

# Install build dependencies
RUN apk add --no-cache build-base libgpiod-dev linux-headers

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt


# -------------------------
# Final image
# -------------------------
FROM python:3.13-alpine

# Runtime packages only
RUN apk add --no-cache libgpiod


# Set up working directory
WORKDIR /app
COPY --from=builder /opt/venv /opt/venv
COPY --chown=app:app . .

ENV PATH="/opt/venv/bin:$PATH"
ENV ROLE=backend
ENV PYTHONUNBUFFERED=1

# Entrypoint switcher
ENTRYPOINT ["/bin/sh", "-c"]
CMD ["\
  if [ \"$ROLE\" = 'worker' ]; then \
    # Set an environment variable to identify worker process
    export ROLE=worker && \
    # Import app.worker module on startup but don't rely on its automatic execution
    celery -A celery_app worker --loglevel=ERROR --concurrency=2 --pool=solo; \
  elif [ \"$ROLE\" = 'beat' ]; then \
    celery -A celery_app beat --loglevel=ERROR --schedule=/app/celerybeat-schedule; \
  else \
    uvicorn app.main:app --workers=2 --host 0.0.0.0 --port 8000; \
  fi"]
